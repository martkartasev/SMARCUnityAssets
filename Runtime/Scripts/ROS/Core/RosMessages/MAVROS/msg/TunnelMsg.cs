//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class TunnelMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/Tunnel";
        public override string RosMessageName => k_RosMessageName;

        //  Tunnel
        // 
        //  https://mavlink.io/en/messages/common.html#TUNNEL
        public byte target_system;
        public byte target_component;
        public ushort payload_type;
        public byte payload_length;
        public byte[] payload;
        //  [[[cog:
        //  import mavros_cog
        //  mavros_cog.idl_decl_enum('MAV_TUNNEL_PAYLOAD_TYPE', 'PAYLOAD_TYPE_', 16)
        //  ]]]
        //  MAV_TUNNEL_PAYLOAD_TYPE
        public const ushort PAYLOAD_TYPE_UNKNOWN = 0; //  Encoding of payload unknown.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED0 = 200; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED1 = 201; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED2 = 202; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED3 = 203; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED4 = 204; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED5 = 205; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED6 = 206; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED7 = 207; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED8 = 208; //  Registered for STorM32 gimbal controller.
        public const ushort PAYLOAD_TYPE_STORM32_RESERVED9 = 209; //  Registered for STorM32 gimbal controller.
        //  [[[end]]] (sum: MyeyEq8Cwt)

        public TunnelMsg()
        {
            this.target_system = 0;
            this.target_component = 0;
            this.payload_type = 0;
            this.payload_length = 0;
            this.payload = new byte[128];
        }

        public TunnelMsg(byte target_system, byte target_component, ushort payload_type, byte payload_length, byte[] payload)
        {
            this.target_system = target_system;
            this.target_component = target_component;
            this.payload_type = payload_type;
            this.payload_length = payload_length;
            this.payload = payload;
        }

        public static TunnelMsg Deserialize(MessageDeserializer deserializer) => new TunnelMsg(deserializer);

        private TunnelMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.target_system);
            deserializer.Read(out this.target_component);
            deserializer.Read(out this.payload_type);
            deserializer.Read(out this.payload_length);
            deserializer.Read(out this.payload, sizeof(byte), 128);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.target_system);
            serializer.Write(this.target_component);
            serializer.Write(this.payload_type);
            serializer.Write(this.payload_length);
            serializer.Write(this.payload);
        }

        public override string ToString()
        {
            return "TunnelMsg: " +
            "\ntarget_system: " + target_system.ToString() +
            "\ntarget_component: " + target_component.ToString() +
            "\npayload_type: " + payload_type.ToString() +
            "\npayload_length: " + payload_length.ToString() +
            "\npayload: " + System.String.Join(", ", payload.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
