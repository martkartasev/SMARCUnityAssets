//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class WheelOdomStampedMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/WheelOdomStamped";
        public override string RosMessageName => k_RosMessageName;

        //  Stamped wheel odometry message
        // 
        //  For streaming timestamped data from FCU wheel encoders (RPM or WHEEL_DISTANCE).
        public Std.HeaderMsg header;
        public double[] data;

        public WheelOdomStampedMsg()
        {
            this.header = new Std.HeaderMsg();
            this.data = new double[0];
        }

        public WheelOdomStampedMsg(Std.HeaderMsg header, double[] data)
        {
            this.header = header;
            this.data = data;
        }

        public static WheelOdomStampedMsg Deserialize(MessageDeserializer deserializer) => new WheelOdomStampedMsg(deserializer);

        private WheelOdomStampedMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.data, sizeof(double), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.data);
            serializer.Write(this.data);
        }

        public override string ToString()
        {
            return "WheelOdomStampedMsg: " +
            "\nheader: " + header.ToString() +
            "\ndata: " + System.String.Join(", ", data.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
