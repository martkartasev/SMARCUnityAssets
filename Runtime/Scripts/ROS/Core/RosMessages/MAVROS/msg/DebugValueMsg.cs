//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class DebugValueMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/DebugValue";
        public override string RosMessageName => k_RosMessageName;

        //  Msg for Debug MAVLink API
        // 
        //  Supported types:
        //  DEBUG			https://mavlink.io/en/messages/common.html#DEBUG
        //  DEBUG_VECTOR			https://mavlink.io/en/messages/common.html#DEBUG_VECT
        //  DEBUG_FLOAT_ARRAY      https://mavlink.io/en/messages/common.html#DEBUG_FLOAT_ARRAY
        //  NAMED_VALUE_FLOAT		https://mavlink.io/en/messages/common.html#NAMED_VALUE_FLOAT
        //  NAMED_VALUE_INT		https://mavlink.io/en/messages/common.html#NAMED_VALUE_INT
        public Std.HeaderMsg header;
        public int index;
        //  index value of DEBUG value (-1 if not indexed)
        public int array_id;
        //  Unique ID used to discriminate between DEBUG_FLOAT_ARRAYS (-1 if not used)
        public string name;
        //  value name/key
        public float value_float;
        //  float value for NAMED_VALUE_FLOAT and DEBUG
        public int value_int;
        //  int value for NAMED_VALUE_INT
        public float[] data;
        //  DEBUG vector or array
        public byte type;
        public const byte TYPE_DEBUG = 0;
        public const byte TYPE_DEBUG_VECT = 1;
        public const byte TYPE_DEBUG_FLOAT_ARRAY = 2;
        public const byte TYPE_NAMED_VALUE_FLOAT = 3;
        public const byte TYPE_NAMED_VALUE_INT = 4;

        public DebugValueMsg()
        {
            this.header = new Std.HeaderMsg();
            this.index = 0;
            this.array_id = 0;
            this.name = "";
            this.value_float = 0.0f;
            this.value_int = 0;
            this.data = new float[0];
            this.type = 0;
        }

        public DebugValueMsg(Std.HeaderMsg header, int index, int array_id, string name, float value_float, int value_int, float[] data, byte type)
        {
            this.header = header;
            this.index = index;
            this.array_id = array_id;
            this.name = name;
            this.value_float = value_float;
            this.value_int = value_int;
            this.data = data;
            this.type = type;
        }

        public static DebugValueMsg Deserialize(MessageDeserializer deserializer) => new DebugValueMsg(deserializer);

        private DebugValueMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.index);
            deserializer.Read(out this.array_id);
            deserializer.Read(out this.name);
            deserializer.Read(out this.value_float);
            deserializer.Read(out this.value_int);
            deserializer.Read(out this.data, sizeof(float), deserializer.ReadLength());
            deserializer.Read(out this.type);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.index);
            serializer.Write(this.array_id);
            serializer.Write(this.name);
            serializer.Write(this.value_float);
            serializer.Write(this.value_int);
            serializer.WriteLength(this.data);
            serializer.Write(this.data);
            serializer.Write(this.type);
        }

        public override string ToString()
        {
            return "DebugValueMsg: " +
            "\nheader: " + header.ToString() +
            "\nindex: " + index.ToString() +
            "\narray_id: " + array_id.ToString() +
            "\nname: " + name.ToString() +
            "\nvalue_float: " + value_float.ToString() +
            "\nvalue_int: " + value_int.ToString() +
            "\ndata: " + System.String.Join(", ", data.ToList()) +
            "\ntype: " + type.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
