//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class HilControlsMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/HilControls";
        public override string RosMessageName => k_RosMessageName;

        //  HilControls.msg
        // 
        //  ROS representation of MAVLink HIL_CONTROLS
        //  (deprecated, use HIL_ACTUATOR_CONTROLS instead)
        //  See mavlink message documentation here:
        //  https://mavlink.io/en/messages/common.html#HIL_CONTROLS
        public Std.HeaderMsg header;
        public float roll_ailerons;
        public float pitch_elevator;
        public float yaw_rudder;
        public float throttle;
        public float aux1;
        public float aux2;
        public float aux3;
        public float aux4;
        public byte mode;
        public byte nav_mode;

        public HilControlsMsg()
        {
            this.header = new Std.HeaderMsg();
            this.roll_ailerons = 0.0f;
            this.pitch_elevator = 0.0f;
            this.yaw_rudder = 0.0f;
            this.throttle = 0.0f;
            this.aux1 = 0.0f;
            this.aux2 = 0.0f;
            this.aux3 = 0.0f;
            this.aux4 = 0.0f;
            this.mode = 0;
            this.nav_mode = 0;
        }

        public HilControlsMsg(Std.HeaderMsg header, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3, float aux4, byte mode, byte nav_mode)
        {
            this.header = header;
            this.roll_ailerons = roll_ailerons;
            this.pitch_elevator = pitch_elevator;
            this.yaw_rudder = yaw_rudder;
            this.throttle = throttle;
            this.aux1 = aux1;
            this.aux2 = aux2;
            this.aux3 = aux3;
            this.aux4 = aux4;
            this.mode = mode;
            this.nav_mode = nav_mode;
        }

        public static HilControlsMsg Deserialize(MessageDeserializer deserializer) => new HilControlsMsg(deserializer);

        private HilControlsMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.roll_ailerons);
            deserializer.Read(out this.pitch_elevator);
            deserializer.Read(out this.yaw_rudder);
            deserializer.Read(out this.throttle);
            deserializer.Read(out this.aux1);
            deserializer.Read(out this.aux2);
            deserializer.Read(out this.aux3);
            deserializer.Read(out this.aux4);
            deserializer.Read(out this.mode);
            deserializer.Read(out this.nav_mode);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.roll_ailerons);
            serializer.Write(this.pitch_elevator);
            serializer.Write(this.yaw_rudder);
            serializer.Write(this.throttle);
            serializer.Write(this.aux1);
            serializer.Write(this.aux2);
            serializer.Write(this.aux3);
            serializer.Write(this.aux4);
            serializer.Write(this.mode);
            serializer.Write(this.nav_mode);
        }

        public override string ToString()
        {
            return "HilControlsMsg: " +
            "\nheader: " + header.ToString() +
            "\nroll_ailerons: " + roll_ailerons.ToString() +
            "\npitch_elevator: " + pitch_elevator.ToString() +
            "\nyaw_rudder: " + yaw_rudder.ToString() +
            "\nthrottle: " + throttle.ToString() +
            "\naux1: " + aux1.ToString() +
            "\naux2: " + aux2.ToString() +
            "\naux3: " + aux3.ToString() +
            "\naux4: " + aux4.ToString() +
            "\nmode: " + mode.ToString() +
            "\nnav_mode: " + nav_mode.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
