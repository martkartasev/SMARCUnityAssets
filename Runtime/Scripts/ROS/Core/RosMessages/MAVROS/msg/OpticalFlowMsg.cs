//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class OpticalFlowMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/OpticalFlow";
        public override string RosMessageName => k_RosMessageName;

        //  OPTICAL_FLOW message data
        public Std.HeaderMsg header;
        public Geometry.Vector3Msg flow;
        public Geometry.Vector3Msg flow_comp_m;
        public byte quality;
        public float ground_distance;
        public Geometry.Vector3Msg flow_rate;

        public OpticalFlowMsg()
        {
            this.header = new Std.HeaderMsg();
            this.flow = new Geometry.Vector3Msg();
            this.flow_comp_m = new Geometry.Vector3Msg();
            this.quality = 0;
            this.ground_distance = 0.0f;
            this.flow_rate = new Geometry.Vector3Msg();
        }

        public OpticalFlowMsg(Std.HeaderMsg header, Geometry.Vector3Msg flow, Geometry.Vector3Msg flow_comp_m, byte quality, float ground_distance, Geometry.Vector3Msg flow_rate)
        {
            this.header = header;
            this.flow = flow;
            this.flow_comp_m = flow_comp_m;
            this.quality = quality;
            this.ground_distance = ground_distance;
            this.flow_rate = flow_rate;
        }

        public static OpticalFlowMsg Deserialize(MessageDeserializer deserializer) => new OpticalFlowMsg(deserializer);

        private OpticalFlowMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            this.flow = Geometry.Vector3Msg.Deserialize(deserializer);
            this.flow_comp_m = Geometry.Vector3Msg.Deserialize(deserializer);
            deserializer.Read(out this.quality);
            deserializer.Read(out this.ground_distance);
            this.flow_rate = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.flow);
            serializer.Write(this.flow_comp_m);
            serializer.Write(this.quality);
            serializer.Write(this.ground_distance);
            serializer.Write(this.flow_rate);
        }

        public override string ToString()
        {
            return "OpticalFlowMsg: " +
            "\nheader: " + header.ToString() +
            "\nflow: " + flow.ToString() +
            "\nflow_comp_m: " + flow_comp_m.ToString() +
            "\nquality: " + quality.ToString() +
            "\nground_distance: " + ground_distance.ToString() +
            "\nflow_rate: " + flow_rate.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
