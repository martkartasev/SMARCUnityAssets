//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class GimbalManagerStatusMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/GimbalManagerStatus";
        public override string RosMessageName => k_RosMessageName;

        //  MAVLink message: GIMBAL_MANAGER_STATUS
        //  https://mavlink.io/en/messages/common.html#GIMBAL_MANAGER_STATUS
        public Std.HeaderMsg header;
        public uint flags;
        //  High level gimbal manager flags to use - See GIMBAL_MANAGER_FLAGS
        // GIMBAL_MANAGER_FLAGS
        public const uint GIMBAL_MANAGER_FLAGS_RETRACT = 1; //  Based on GIMBAL_DEVICE_FLAGS_RETRACT
        public const uint GIMBAL_MANAGER_FLAGS_NEUTRAL = 2; //  Based on GIMBAL_DEVICE_FLAGS_NEUTRAL
        public const uint GIMBAL_MANAGER_FLAGS_ROLL_LOCK = 4; //  Based on GIMBAL_DEVICE_FLAGS_ROLL_LOCK
        public const uint GIMBAL_MANAGER_FLAGS_PITCH_LOCK = 8; //  Based on GIMBAL_DEVICE_FLAGS_PITCH_LOCK
        public const uint GIMBAL_MANAGER_FLAGS_YAW_LOCK = 16; //  Based on GIMBAL_DEVICE_FLAGS_YAW_LOCK
        public byte gimbal_device_id;
        //  Gimbal device ID that this gimbal manager is responsible for.
        public byte sysid_primary;
        //  System ID of MAVLink component with primary control, 0 for none.
        public byte compid_primary;
        //  Component ID of MAVLink component with primary control, 0 for none.
        public byte sysid_secondary;
        //  System ID of MAVLink component with secondary control, 0 for none.
        public byte compid_secondary;
        //  Component ID of MAVLink component with secondary control, 0 for none.

        public GimbalManagerStatusMsg()
        {
            this.header = new Std.HeaderMsg();
            this.flags = 0;
            this.gimbal_device_id = 0;
            this.sysid_primary = 0;
            this.compid_primary = 0;
            this.sysid_secondary = 0;
            this.compid_secondary = 0;
        }

        public GimbalManagerStatusMsg(Std.HeaderMsg header, uint flags, byte gimbal_device_id, byte sysid_primary, byte compid_primary, byte sysid_secondary, byte compid_secondary)
        {
            this.header = header;
            this.flags = flags;
            this.gimbal_device_id = gimbal_device_id;
            this.sysid_primary = sysid_primary;
            this.compid_primary = compid_primary;
            this.sysid_secondary = sysid_secondary;
            this.compid_secondary = compid_secondary;
        }

        public static GimbalManagerStatusMsg Deserialize(MessageDeserializer deserializer) => new GimbalManagerStatusMsg(deserializer);

        private GimbalManagerStatusMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.flags);
            deserializer.Read(out this.gimbal_device_id);
            deserializer.Read(out this.sysid_primary);
            deserializer.Read(out this.compid_primary);
            deserializer.Read(out this.sysid_secondary);
            deserializer.Read(out this.compid_secondary);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.flags);
            serializer.Write(this.gimbal_device_id);
            serializer.Write(this.sysid_primary);
            serializer.Write(this.compid_primary);
            serializer.Write(this.sysid_secondary);
            serializer.Write(this.compid_secondary);
        }

        public override string ToString()
        {
            return "GimbalManagerStatusMsg: " +
            "\nheader: " + header.ToString() +
            "\nflags: " + flags.ToString() +
            "\ngimbal_device_id: " + gimbal_device_id.ToString() +
            "\nsysid_primary: " + sysid_primary.ToString() +
            "\ncompid_primary: " + compid_primary.ToString() +
            "\nsysid_secondary: " + sysid_secondary.ToString() +
            "\ncompid_secondary: " + compid_secondary.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
