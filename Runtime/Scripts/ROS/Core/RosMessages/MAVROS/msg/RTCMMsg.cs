//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class RTCMMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/RTCM";
        public override string RosMessageName => k_RosMessageName;

        //  RTCM message for the gps_rtk plugin
        //  The gps_rtk plugin will fragment the data if necessary and
        //  forward it to the FCU via Mavlink through the available link.
        //  data should be <= 4*180, higher will be discarded.
        public Std.HeaderMsg header;
        public byte[] data;

        public RTCMMsg()
        {
            this.header = new Std.HeaderMsg();
            this.data = new byte[0];
        }

        public RTCMMsg(Std.HeaderMsg header, byte[] data)
        {
            this.header = header;
            this.data = data;
        }

        public static RTCMMsg Deserialize(MessageDeserializer deserializer) => new RTCMMsg(deserializer);

        private RTCMMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.data, sizeof(byte), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.data);
            serializer.Write(this.data);
        }

        public override string ToString()
        {
            return "RTCMMsg: " +
            "\nheader: " + header.ToString() +
            "\ndata: " + System.String.Join(", ", data.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
