//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class ESCInfoItemMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/ESCInfoItem";
        public override string RosMessageName => k_RosMessageName;

        //  ESCInfoItem.msg
        // 
        // 
        //  See mavlink message documentation here:
        //  https://mavlink.io/en/messages/common.html#ESC_INFO
        public Std.HeaderMsg header;
        public ushort failure_flags;
        public uint error_count;
        public int temperature;

        public ESCInfoItemMsg()
        {
            this.header = new Std.HeaderMsg();
            this.failure_flags = 0;
            this.error_count = 0;
            this.temperature = 0;
        }

        public ESCInfoItemMsg(Std.HeaderMsg header, ushort failure_flags, uint error_count, int temperature)
        {
            this.header = header;
            this.failure_flags = failure_flags;
            this.error_count = error_count;
            this.temperature = temperature;
        }

        public static ESCInfoItemMsg Deserialize(MessageDeserializer deserializer) => new ESCInfoItemMsg(deserializer);

        private ESCInfoItemMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.failure_flags);
            deserializer.Read(out this.error_count);
            deserializer.Read(out this.temperature);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.failure_flags);
            serializer.Write(this.error_count);
            serializer.Write(this.temperature);
        }

        public override string ToString()
        {
            return "ESCInfoItemMsg: " +
            "\nheader: " + header.ToString() +
            "\nfailure_flags: " + failure_flags.ToString() +
            "\nerror_count: " + error_count.ToString() +
            "\ntemperature: " + temperature.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
