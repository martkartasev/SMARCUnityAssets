//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class HilGPSMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/HilGPS";
        public override string RosMessageName => k_RosMessageName;

        //  HilControls.msg
        // 
        //  ROS representation of MAVLink HIL_GPS
        //  See mavlink message documentation here:
        //  https://mavlink.io/en/messages/common.html#HIL_GPS
        public Std.HeaderMsg header;
        public byte fix_type;
        public Geographic.GeoPointMsg geo;
        public ushort eph;
        public ushort epv;
        public ushort vel;
        public short vn;
        public short ve;
        public short vd;
        public ushort cog;
        public byte satellites_visible;

        public HilGPSMsg()
        {
            this.header = new Std.HeaderMsg();
            this.fix_type = 0;
            this.geo = new Geographic.GeoPointMsg();
            this.eph = 0;
            this.epv = 0;
            this.vel = 0;
            this.vn = 0;
            this.ve = 0;
            this.vd = 0;
            this.cog = 0;
            this.satellites_visible = 0;
        }

        public HilGPSMsg(Std.HeaderMsg header, byte fix_type, Geographic.GeoPointMsg geo, ushort eph, ushort epv, ushort vel, short vn, short ve, short vd, ushort cog, byte satellites_visible)
        {
            this.header = header;
            this.fix_type = fix_type;
            this.geo = geo;
            this.eph = eph;
            this.epv = epv;
            this.vel = vel;
            this.vn = vn;
            this.ve = ve;
            this.vd = vd;
            this.cog = cog;
            this.satellites_visible = satellites_visible;
        }

        public static HilGPSMsg Deserialize(MessageDeserializer deserializer) => new HilGPSMsg(deserializer);

        private HilGPSMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.fix_type);
            this.geo = Geographic.GeoPointMsg.Deserialize(deserializer);
            deserializer.Read(out this.eph);
            deserializer.Read(out this.epv);
            deserializer.Read(out this.vel);
            deserializer.Read(out this.vn);
            deserializer.Read(out this.ve);
            deserializer.Read(out this.vd);
            deserializer.Read(out this.cog);
            deserializer.Read(out this.satellites_visible);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.fix_type);
            serializer.Write(this.geo);
            serializer.Write(this.eph);
            serializer.Write(this.epv);
            serializer.Write(this.vel);
            serializer.Write(this.vn);
            serializer.Write(this.ve);
            serializer.Write(this.vd);
            serializer.Write(this.cog);
            serializer.Write(this.satellites_visible);
        }

        public override string ToString()
        {
            return "HilGPSMsg: " +
            "\nheader: " + header.ToString() +
            "\nfix_type: " + fix_type.ToString() +
            "\ngeo: " + geo.ToString() +
            "\neph: " + eph.ToString() +
            "\nepv: " + epv.ToString() +
            "\nvel: " + vel.ToString() +
            "\nvn: " + vn.ToString() +
            "\nve: " + ve.ToString() +
            "\nvd: " + vd.ToString() +
            "\ncog: " + cog.ToString() +
            "\nsatellites_visible: " + satellites_visible.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
