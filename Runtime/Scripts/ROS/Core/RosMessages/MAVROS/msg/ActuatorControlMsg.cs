//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class ActuatorControlMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/ActuatorControl";
        public override string RosMessageName => k_RosMessageName;

        //  raw servo values for direct actuator controls
        // 
        //  about groups, mixing and channels:
        //  https://pixhawk.org/dev/mixing
        //  constant for mixer group
        public const byte PX4_MIX_FLIGHT_CONTROL = 0;
        public const byte PX4_MIX_FLIGHT_CONTROL_VTOL_ALT = 1;
        public const byte PX4_MIX_PAYLOAD = 2;
        public const byte PX4_MIX_MANUAL_PASSTHROUGH = 3;
        // uint8 PX4_MIX_FC_MC_VIRT = 4
        // uint8 PX4_MIX_FC_FW_VIRT = 5
        public Std.HeaderMsg header;
        public byte group_mix;
        public float[] controls;

        public ActuatorControlMsg()
        {
            this.header = new Std.HeaderMsg();
            this.group_mix = 0;
            this.controls = new float[8];
        }

        public ActuatorControlMsg(Std.HeaderMsg header, byte group_mix, float[] controls)
        {
            this.header = header;
            this.group_mix = group_mix;
            this.controls = controls;
        }

        public static ActuatorControlMsg Deserialize(MessageDeserializer deserializer) => new ActuatorControlMsg(deserializer);

        private ActuatorControlMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.group_mix);
            deserializer.Read(out this.controls, sizeof(float), 8);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.group_mix);
            serializer.Write(this.controls);
        }

        public override string ToString()
        {
            return "ActuatorControlMsg: " +
            "\nheader: " + header.ToString() +
            "\ngroup_mix: " + group_mix.ToString() +
            "\ncontrols: " + System.String.Join(", ", controls.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
