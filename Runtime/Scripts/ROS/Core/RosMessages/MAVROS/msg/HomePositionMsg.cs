//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class HomePositionMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/HomePosition";
        public override string RosMessageName => k_RosMessageName;

        //  MAVLink message: HOME_POSITION
        //  https://mavlink.io/en/messages/common.html#HOME_POSITION
        public Std.HeaderMsg header;
        public Geographic.GeoPointMsg geo;
        //  geodetic coordinates in WGS-84 datum
        public Geometry.PointMsg position;
        //  local position
        public Geometry.QuaternionMsg orientation;
        //  XXX: verify field name (q[4])
        public Geometry.Vector3Msg approach;
        //  position of the end of approach vector

        public HomePositionMsg()
        {
            this.header = new Std.HeaderMsg();
            this.geo = new Geographic.GeoPointMsg();
            this.position = new Geometry.PointMsg();
            this.orientation = new Geometry.QuaternionMsg();
            this.approach = new Geometry.Vector3Msg();
        }

        public HomePositionMsg(Std.HeaderMsg header, Geographic.GeoPointMsg geo, Geometry.PointMsg position, Geometry.QuaternionMsg orientation, Geometry.Vector3Msg approach)
        {
            this.header = header;
            this.geo = geo;
            this.position = position;
            this.orientation = orientation;
            this.approach = approach;
        }

        public static HomePositionMsg Deserialize(MessageDeserializer deserializer) => new HomePositionMsg(deserializer);

        private HomePositionMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            this.geo = Geographic.GeoPointMsg.Deserialize(deserializer);
            this.position = Geometry.PointMsg.Deserialize(deserializer);
            this.orientation = Geometry.QuaternionMsg.Deserialize(deserializer);
            this.approach = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.geo);
            serializer.Write(this.position);
            serializer.Write(this.orientation);
            serializer.Write(this.approach);
        }

        public override string ToString()
        {
            return "HomePositionMsg: " +
            "\nheader: " + header.ToString() +
            "\ngeo: " + geo.ToString() +
            "\nposition: " + position.ToString() +
            "\norientation: " + orientation.ToString() +
            "\napproach: " + approach.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
