//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class HilActuatorControlsMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/HilActuatorControls";
        public override string RosMessageName => k_RosMessageName;

        //  HilActuatorControls.msg
        // 
        //  ROS representation of MAVLink HIL_ACTUATOR_CONTROLS
        //  See mavlink message documentation here:
        //  https://mavlink.io/en/messages/common.html#HIL_ACTUATOR_CONTROLS
        public Std.HeaderMsg header;
        public float[] controls;
        public byte mode;
        public ulong flags;

        public HilActuatorControlsMsg()
        {
            this.header = new Std.HeaderMsg();
            this.controls = new float[16];
            this.mode = 0;
            this.flags = 0;
        }

        public HilActuatorControlsMsg(Std.HeaderMsg header, float[] controls, byte mode, ulong flags)
        {
            this.header = header;
            this.controls = controls;
            this.mode = mode;
            this.flags = flags;
        }

        public static HilActuatorControlsMsg Deserialize(MessageDeserializer deserializer) => new HilActuatorControlsMsg(deserializer);

        private HilActuatorControlsMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.controls, sizeof(float), 16);
            deserializer.Read(out this.mode);
            deserializer.Read(out this.flags);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.controls);
            serializer.Write(this.mode);
            serializer.Write(this.flags);
        }

        public override string ToString()
        {
            return "HilActuatorControlsMsg: " +
            "\nheader: " + header.ToString() +
            "\ncontrols: " + System.String.Join(", ", controls.ToList()) +
            "\nmode: " + mode.ToString() +
            "\nflags: " + flags.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
