//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class ObstacleDistance3DMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/ObstacleDistance3D";
        public override string RosMessageName => k_RosMessageName;

        //  Obstacle Distance 3D message
        //  Represents a single obstacle position in 3D space
        //  
        //  https://mavlink.io/en/messages/ardupilotmega.html#OBSTACLE_DISTANCE_3D
        //  MAVLink Message ID: 11037
        public Std.HeaderMsg header;
        //  MAV_DISTANCE_SENSOR enum
        public byte sensor_type;
        //  MAV_FRAME enum  
        public byte frame;
        //  Unique ID for the obstacle
        public ushort obstacle_id;
        //  Obstacle position in meters
        public Geometry.PointMsg position;
        //  Sensor range in meters
        public float min_distance;
        public float max_distance;

        public ObstacleDistance3DMsg()
        {
            this.header = new Std.HeaderMsg();
            this.sensor_type = 0;
            this.frame = 0;
            this.obstacle_id = 0;
            this.position = new Geometry.PointMsg();
            this.min_distance = 0.0f;
            this.max_distance = 0.0f;
        }

        public ObstacleDistance3DMsg(Std.HeaderMsg header, byte sensor_type, byte frame, ushort obstacle_id, Geometry.PointMsg position, float min_distance, float max_distance)
        {
            this.header = header;
            this.sensor_type = sensor_type;
            this.frame = frame;
            this.obstacle_id = obstacle_id;
            this.position = position;
            this.min_distance = min_distance;
            this.max_distance = max_distance;
        }

        public static ObstacleDistance3DMsg Deserialize(MessageDeserializer deserializer) => new ObstacleDistance3DMsg(deserializer);

        private ObstacleDistance3DMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.sensor_type);
            deserializer.Read(out this.frame);
            deserializer.Read(out this.obstacle_id);
            this.position = Geometry.PointMsg.Deserialize(deserializer);
            deserializer.Read(out this.min_distance);
            deserializer.Read(out this.max_distance);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.sensor_type);
            serializer.Write(this.frame);
            serializer.Write(this.obstacle_id);
            serializer.Write(this.position);
            serializer.Write(this.min_distance);
            serializer.Write(this.max_distance);
        }

        public override string ToString()
        {
            return "ObstacleDistance3DMsg: " +
            "\nheader: " + header.ToString() +
            "\nsensor_type: " + sensor_type.ToString() +
            "\nframe: " + frame.ToString() +
            "\nobstacle_id: " + obstacle_id.ToString() +
            "\nposition: " + position.ToString() +
            "\nmin_distance: " + min_distance.ToString() +
            "\nmax_distance: " + max_distance.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
