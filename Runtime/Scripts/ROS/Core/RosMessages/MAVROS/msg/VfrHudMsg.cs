//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class VfrHudMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/VfrHud";
        public override string RosMessageName => k_RosMessageName;

        //  Metrics typically displayed on a HUD for fixed wing aircraft
        // 
        //  VFR_HUD message
        public Std.HeaderMsg header;
        public float airspeed;
        //  m/s
        public float groundspeed;
        //  m/s
        public short heading;
        //  degrees 0..360
        public float throttle;
        //  normalized to 0.0..1.0
        public float altitude;
        //  MSL
        public float climb;
        //  current climb rate m/s

        public VfrHudMsg()
        {
            this.header = new Std.HeaderMsg();
            this.airspeed = 0.0f;
            this.groundspeed = 0.0f;
            this.heading = 0;
            this.throttle = 0.0f;
            this.altitude = 0.0f;
            this.climb = 0.0f;
        }

        public VfrHudMsg(Std.HeaderMsg header, float airspeed, float groundspeed, short heading, float throttle, float altitude, float climb)
        {
            this.header = header;
            this.airspeed = airspeed;
            this.groundspeed = groundspeed;
            this.heading = heading;
            this.throttle = throttle;
            this.altitude = altitude;
            this.climb = climb;
        }

        public static VfrHudMsg Deserialize(MessageDeserializer deserializer) => new VfrHudMsg(deserializer);

        private VfrHudMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.airspeed);
            deserializer.Read(out this.groundspeed);
            deserializer.Read(out this.heading);
            deserializer.Read(out this.throttle);
            deserializer.Read(out this.altitude);
            deserializer.Read(out this.climb);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.airspeed);
            serializer.Write(this.groundspeed);
            serializer.Write(this.heading);
            serializer.Write(this.throttle);
            serializer.Write(this.altitude);
            serializer.Write(this.climb);
        }

        public override string ToString()
        {
            return "VfrHudMsg: " +
            "\nheader: " + header.ToString() +
            "\nairspeed: " + airspeed.ToString() +
            "\ngroundspeed: " + groundspeed.ToString() +
            "\nheading: " + heading.ToString() +
            "\nthrottle: " + throttle.ToString() +
            "\naltitude: " + altitude.ToString() +
            "\nclimb: " + climb.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
