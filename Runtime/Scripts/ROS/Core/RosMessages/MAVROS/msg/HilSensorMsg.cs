//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class HilSensorMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/HilSensor";
        public override string RosMessageName => k_RosMessageName;

        //  HilSensor.msg
        // 
        //  ROS representation of MAVLink HIL_SENSOR
        //  See mavlink message documentation here:
        //  https://mavlink.io/en/messages/common.html#HIL_SENSOR
        public Std.HeaderMsg header;
        public Geometry.Vector3Msg acc;
        public Geometry.Vector3Msg gyro;
        public Geometry.Vector3Msg mag;
        public float abs_pressure;
        public float diff_pressure;
        public float pressure_alt;
        public float temperature;
        public uint fields_updated;

        public HilSensorMsg()
        {
            this.header = new Std.HeaderMsg();
            this.acc = new Geometry.Vector3Msg();
            this.gyro = new Geometry.Vector3Msg();
            this.mag = new Geometry.Vector3Msg();
            this.abs_pressure = 0.0f;
            this.diff_pressure = 0.0f;
            this.pressure_alt = 0.0f;
            this.temperature = 0.0f;
            this.fields_updated = 0;
        }

        public HilSensorMsg(Std.HeaderMsg header, Geometry.Vector3Msg acc, Geometry.Vector3Msg gyro, Geometry.Vector3Msg mag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint fields_updated)
        {
            this.header = header;
            this.acc = acc;
            this.gyro = gyro;
            this.mag = mag;
            this.abs_pressure = abs_pressure;
            this.diff_pressure = diff_pressure;
            this.pressure_alt = pressure_alt;
            this.temperature = temperature;
            this.fields_updated = fields_updated;
        }

        public static HilSensorMsg Deserialize(MessageDeserializer deserializer) => new HilSensorMsg(deserializer);

        private HilSensorMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            this.acc = Geometry.Vector3Msg.Deserialize(deserializer);
            this.gyro = Geometry.Vector3Msg.Deserialize(deserializer);
            this.mag = Geometry.Vector3Msg.Deserialize(deserializer);
            deserializer.Read(out this.abs_pressure);
            deserializer.Read(out this.diff_pressure);
            deserializer.Read(out this.pressure_alt);
            deserializer.Read(out this.temperature);
            deserializer.Read(out this.fields_updated);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.acc);
            serializer.Write(this.gyro);
            serializer.Write(this.mag);
            serializer.Write(this.abs_pressure);
            serializer.Write(this.diff_pressure);
            serializer.Write(this.pressure_alt);
            serializer.Write(this.temperature);
            serializer.Write(this.fields_updated);
        }

        public override string ToString()
        {
            return "HilSensorMsg: " +
            "\nheader: " + header.ToString() +
            "\nacc: " + acc.ToString() +
            "\ngyro: " + gyro.ToString() +
            "\nmag: " + mag.ToString() +
            "\nabs_pressure: " + abs_pressure.ToString() +
            "\ndiff_pressure: " + diff_pressure.ToString() +
            "\npressure_alt: " + pressure_alt.ToString() +
            "\ntemperature: " + temperature.ToString() +
            "\nfields_updated: " + fields_updated.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
