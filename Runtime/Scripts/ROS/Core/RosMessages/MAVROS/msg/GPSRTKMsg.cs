//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class GPSRTKMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/GPSRTK";
        public override string RosMessageName => k_RosMessageName;

        //  FCU GPS RTK message for the gps_status plugin
        //  A copy of <a href="https://mavlink.io/en/messages/common.html#GPS_RTK">mavlink GPS_RTK message</a>
        public Std.HeaderMsg header;
        public byte rtk_receiver_id;
        //  Identification of connected RTK receiver.
        public short wn;
        //  GPS Week Number of last baseline.
        public uint tow;
        //  [ms] GPS Time of Week of last baseline.
        public byte rtk_health;
        //  GPS-specific health report for RTK data.
        public byte rtk_rate;
        //  [Hz] Rate of baseline messages being received by GPS.
        public byte nsats;
        //  Current number of sats used for RTK calculation.
        public int baseline_a;
        //  [mm] Current baseline in ECEF x or NED north component, depends on header.frame_id.
        public int baseline_b;
        //  [mm] Current baseline in ECEF y or NED east component, depends on header.frame_id.
        public int baseline_c;
        //  [mm] Current baseline in ECEF z or NED down component, depends on header.frame_id.
        public uint accuracy;
        //  Current estimate of baseline accuracy.
        public int iar_num_hypotheses;
        //  Current number of integer ambiguity hypotheses.

        public GPSRTKMsg()
        {
            this.header = new Std.HeaderMsg();
            this.rtk_receiver_id = 0;
            this.wn = 0;
            this.tow = 0;
            this.rtk_health = 0;
            this.rtk_rate = 0;
            this.nsats = 0;
            this.baseline_a = 0;
            this.baseline_b = 0;
            this.baseline_c = 0;
            this.accuracy = 0;
            this.iar_num_hypotheses = 0;
        }

        public GPSRTKMsg(Std.HeaderMsg header, byte rtk_receiver_id, short wn, uint tow, byte rtk_health, byte rtk_rate, byte nsats, int baseline_a, int baseline_b, int baseline_c, uint accuracy, int iar_num_hypotheses)
        {
            this.header = header;
            this.rtk_receiver_id = rtk_receiver_id;
            this.wn = wn;
            this.tow = tow;
            this.rtk_health = rtk_health;
            this.rtk_rate = rtk_rate;
            this.nsats = nsats;
            this.baseline_a = baseline_a;
            this.baseline_b = baseline_b;
            this.baseline_c = baseline_c;
            this.accuracy = accuracy;
            this.iar_num_hypotheses = iar_num_hypotheses;
        }

        public static GPSRTKMsg Deserialize(MessageDeserializer deserializer) => new GPSRTKMsg(deserializer);

        private GPSRTKMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.rtk_receiver_id);
            deserializer.Read(out this.wn);
            deserializer.Read(out this.tow);
            deserializer.Read(out this.rtk_health);
            deserializer.Read(out this.rtk_rate);
            deserializer.Read(out this.nsats);
            deserializer.Read(out this.baseline_a);
            deserializer.Read(out this.baseline_b);
            deserializer.Read(out this.baseline_c);
            deserializer.Read(out this.accuracy);
            deserializer.Read(out this.iar_num_hypotheses);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.rtk_receiver_id);
            serializer.Write(this.wn);
            serializer.Write(this.tow);
            serializer.Write(this.rtk_health);
            serializer.Write(this.rtk_rate);
            serializer.Write(this.nsats);
            serializer.Write(this.baseline_a);
            serializer.Write(this.baseline_b);
            serializer.Write(this.baseline_c);
            serializer.Write(this.accuracy);
            serializer.Write(this.iar_num_hypotheses);
        }

        public override string ToString()
        {
            return "GPSRTKMsg: " +
            "\nheader: " + header.ToString() +
            "\nrtk_receiver_id: " + rtk_receiver_id.ToString() +
            "\nwn: " + wn.ToString() +
            "\ntow: " + tow.ToString() +
            "\nrtk_health: " + rtk_health.ToString() +
            "\nrtk_rate: " + rtk_rate.ToString() +
            "\nnsats: " + nsats.ToString() +
            "\nbaseline_a: " + baseline_a.ToString() +
            "\nbaseline_b: " + baseline_b.ToString() +
            "\nbaseline_c: " + baseline_c.ToString() +
            "\naccuracy: " + accuracy.ToString() +
            "\niar_num_hypotheses: " + iar_num_hypotheses.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
