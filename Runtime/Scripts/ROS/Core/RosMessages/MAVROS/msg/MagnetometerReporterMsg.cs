//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class MagnetometerReporterMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/MagnetometerReporter";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public byte report;
        public float confidence;
        public byte compass_id;
        public byte cal_mask;
        public byte cal_status;
        public byte autosaved;
        public float fitness;
        public float ofs_x;
        public float ofs_y;
        public float ofs_z;
        public float diag_x;
        public float diag_y;
        public float diag_z;
        public float offdiag_x;
        public float offdiag_y;
        public float offdiag_z;
        public float orientation_confidence;
        public byte old_orientation;
        public byte new_orientation;
        public float scale_factor;

        public MagnetometerReporterMsg()
        {
            this.header = new Std.HeaderMsg();
            this.report = 0;
            this.confidence = 0.0f;
            this.compass_id = 0;
            this.cal_mask = 0;
            this.cal_status = 0;
            this.autosaved = 0;
            this.fitness = 0.0f;
            this.ofs_x = 0.0f;
            this.ofs_y = 0.0f;
            this.ofs_z = 0.0f;
            this.diag_x = 0.0f;
            this.diag_y = 0.0f;
            this.diag_z = 0.0f;
            this.offdiag_x = 0.0f;
            this.offdiag_y = 0.0f;
            this.offdiag_z = 0.0f;
            this.orientation_confidence = 0.0f;
            this.old_orientation = 0;
            this.new_orientation = 0;
            this.scale_factor = 0.0f;
        }

        public MagnetometerReporterMsg(Std.HeaderMsg header, byte report, float confidence, byte compass_id, byte cal_mask, byte cal_status, byte autosaved, float fitness, float ofs_x, float ofs_y, float ofs_z, float diag_x, float diag_y, float diag_z, float offdiag_x, float offdiag_y, float offdiag_z, float orientation_confidence, byte old_orientation, byte new_orientation, float scale_factor)
        {
            this.header = header;
            this.report = report;
            this.confidence = confidence;
            this.compass_id = compass_id;
            this.cal_mask = cal_mask;
            this.cal_status = cal_status;
            this.autosaved = autosaved;
            this.fitness = fitness;
            this.ofs_x = ofs_x;
            this.ofs_y = ofs_y;
            this.ofs_z = ofs_z;
            this.diag_x = diag_x;
            this.diag_y = diag_y;
            this.diag_z = diag_z;
            this.offdiag_x = offdiag_x;
            this.offdiag_y = offdiag_y;
            this.offdiag_z = offdiag_z;
            this.orientation_confidence = orientation_confidence;
            this.old_orientation = old_orientation;
            this.new_orientation = new_orientation;
            this.scale_factor = scale_factor;
        }

        public static MagnetometerReporterMsg Deserialize(MessageDeserializer deserializer) => new MagnetometerReporterMsg(deserializer);

        private MagnetometerReporterMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.report);
            deserializer.Read(out this.confidence);
            deserializer.Read(out this.compass_id);
            deserializer.Read(out this.cal_mask);
            deserializer.Read(out this.cal_status);
            deserializer.Read(out this.autosaved);
            deserializer.Read(out this.fitness);
            deserializer.Read(out this.ofs_x);
            deserializer.Read(out this.ofs_y);
            deserializer.Read(out this.ofs_z);
            deserializer.Read(out this.diag_x);
            deserializer.Read(out this.diag_y);
            deserializer.Read(out this.diag_z);
            deserializer.Read(out this.offdiag_x);
            deserializer.Read(out this.offdiag_y);
            deserializer.Read(out this.offdiag_z);
            deserializer.Read(out this.orientation_confidence);
            deserializer.Read(out this.old_orientation);
            deserializer.Read(out this.new_orientation);
            deserializer.Read(out this.scale_factor);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.report);
            serializer.Write(this.confidence);
            serializer.Write(this.compass_id);
            serializer.Write(this.cal_mask);
            serializer.Write(this.cal_status);
            serializer.Write(this.autosaved);
            serializer.Write(this.fitness);
            serializer.Write(this.ofs_x);
            serializer.Write(this.ofs_y);
            serializer.Write(this.ofs_z);
            serializer.Write(this.diag_x);
            serializer.Write(this.diag_y);
            serializer.Write(this.diag_z);
            serializer.Write(this.offdiag_x);
            serializer.Write(this.offdiag_y);
            serializer.Write(this.offdiag_z);
            serializer.Write(this.orientation_confidence);
            serializer.Write(this.old_orientation);
            serializer.Write(this.new_orientation);
            serializer.Write(this.scale_factor);
        }

        public override string ToString()
        {
            return "MagnetometerReporterMsg: " +
            "\nheader: " + header.ToString() +
            "\nreport: " + report.ToString() +
            "\nconfidence: " + confidence.ToString() +
            "\ncompass_id: " + compass_id.ToString() +
            "\ncal_mask: " + cal_mask.ToString() +
            "\ncal_status: " + cal_status.ToString() +
            "\nautosaved: " + autosaved.ToString() +
            "\nfitness: " + fitness.ToString() +
            "\nofs_x: " + ofs_x.ToString() +
            "\nofs_y: " + ofs_y.ToString() +
            "\nofs_z: " + ofs_z.ToString() +
            "\ndiag_x: " + diag_x.ToString() +
            "\ndiag_y: " + diag_y.ToString() +
            "\ndiag_z: " + diag_z.ToString() +
            "\noffdiag_x: " + offdiag_x.ToString() +
            "\noffdiag_y: " + offdiag_y.ToString() +
            "\noffdiag_z: " + offdiag_z.ToString() +
            "\norientation_confidence: " + orientation_confidence.ToString() +
            "\nold_orientation: " + old_orientation.ToString() +
            "\nnew_orientation: " + new_orientation.ToString() +
            "\nscale_factor: " + scale_factor.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
