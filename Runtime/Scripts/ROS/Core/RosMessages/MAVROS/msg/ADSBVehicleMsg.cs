//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class ADSBVehicleMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/ADSBVehicle";
        public override string RosMessageName => k_RosMessageName;

        //  The location and information of an ADSB vehicle
        // 
        //  https://mavlink.io/en/messages/common.html#ADSB_VEHICLE
        //  [[[cog:
        //  import mavros_cog
        //  mavros_cog.idl_decl_enum('ADSB_ALTITUDE_TYPE', 'ALT_')
        //  mavros_cog.idl_decl_enum('ADSB_EMITTER_TYPE', 'EMITTER_')
        //  mavros_cog.idl_decl_enum('ADSB_FLAGS', 'FLAG_', 16)
        //  ]]]
        //  ADSB_ALTITUDE_TYPE
        public const byte ALT_PRESSURE_QNH = 0; //  Altitude reported from a Baro source using QNH reference
        public const byte ALT_GEOMETRIC = 1; //  Altitude reported from a GNSS source
        //  ADSB_EMITTER_TYPE
        public const byte EMITTER_NO_INFO = 0;
        public const byte EMITTER_LIGHT = 1;
        public const byte EMITTER_SMALL = 2;
        public const byte EMITTER_LARGE = 3;
        public const byte EMITTER_HIGH_VORTEX_LARGE = 4;
        public const byte EMITTER_HEAVY = 5;
        public const byte EMITTER_HIGHLY_MANUV = 6;
        public const byte EMITTER_ROTOCRAFT = 7;
        public const byte EMITTER_UNASSIGNED = 8;
        public const byte EMITTER_GLIDER = 9;
        public const byte EMITTER_LIGHTER_AIR = 10;
        public const byte EMITTER_PARACHUTE = 11;
        public const byte EMITTER_ULTRA_LIGHT = 12;
        public const byte EMITTER_UNASSIGNED2 = 13;
        public const byte EMITTER_UAV = 14;
        public const byte EMITTER_SPACE = 15;
        public const byte EMITTER_UNASSGINED3 = 16;
        public const byte EMITTER_EMERGENCY_SURFACE = 17;
        public const byte EMITTER_SERVICE_SURFACE = 18;
        public const byte EMITTER_POINT_OBSTACLE = 19;
        //  ADSB_FLAGS
        public const ushort FLAG_VALID_COORDS = 1;
        public const ushort FLAG_VALID_ALTITUDE = 2;
        public const ushort FLAG_VALID_HEADING = 4;
        public const ushort FLAG_VALID_VELOCITY = 8;
        public const ushort FLAG_VALID_CALLSIGN = 16;
        public const ushort FLAG_VALID_SQUAWK = 32;
        public const ushort FLAG_SIMULATED = 64;
        public const ushort FLAG_VERTICAL_VELOCITY_VALID = 128;
        public const ushort FLAG_BARO_VALID = 256;
        public const ushort FLAG_SOURCE_UAT = 32768;
        //  [[[end]]] (sum: o08qCBc5kh)
        public Std.HeaderMsg header;
        public uint icao_address;
        public string callsign;
        public double latitude;
        public double longitude;
        public float altitude;
        //  AMSL
        public float heading;
        //  deg [0..360)
        public float hor_velocity;
        //  m/s
        public float ver_velocity;
        //  m/s
        public byte altitude_type;
        //  Type from ADSB_ALTITUDE_TYPE enum
        public byte emitter_type;
        //  Type from ADSB_EMITTER_TYPE enum
        public BuiltinInterfaces.DurationMsg tslc;
        //  Duration from last communication, seconds [0..255]
        public ushort flags;
        //  ADSB_FLAGS bit field
        public ushort squawk;
        //  Squawk code

        public ADSBVehicleMsg()
        {
            this.header = new Std.HeaderMsg();
            this.icao_address = 0;
            this.callsign = "";
            this.latitude = 0.0;
            this.longitude = 0.0;
            this.altitude = 0.0f;
            this.heading = 0.0f;
            this.hor_velocity = 0.0f;
            this.ver_velocity = 0.0f;
            this.altitude_type = 0;
            this.emitter_type = 0;
            this.tslc = new BuiltinInterfaces.DurationMsg();
            this.flags = 0;
            this.squawk = 0;
        }

        public ADSBVehicleMsg(Std.HeaderMsg header, uint icao_address, string callsign, double latitude, double longitude, float altitude, float heading, float hor_velocity, float ver_velocity, byte altitude_type, byte emitter_type, BuiltinInterfaces.DurationMsg tslc, ushort flags, ushort squawk)
        {
            this.header = header;
            this.icao_address = icao_address;
            this.callsign = callsign;
            this.latitude = latitude;
            this.longitude = longitude;
            this.altitude = altitude;
            this.heading = heading;
            this.hor_velocity = hor_velocity;
            this.ver_velocity = ver_velocity;
            this.altitude_type = altitude_type;
            this.emitter_type = emitter_type;
            this.tslc = tslc;
            this.flags = flags;
            this.squawk = squawk;
        }

        public static ADSBVehicleMsg Deserialize(MessageDeserializer deserializer) => new ADSBVehicleMsg(deserializer);

        private ADSBVehicleMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.icao_address);
            deserializer.Read(out this.callsign);
            deserializer.Read(out this.latitude);
            deserializer.Read(out this.longitude);
            deserializer.Read(out this.altitude);
            deserializer.Read(out this.heading);
            deserializer.Read(out this.hor_velocity);
            deserializer.Read(out this.ver_velocity);
            deserializer.Read(out this.altitude_type);
            deserializer.Read(out this.emitter_type);
            this.tslc = BuiltinInterfaces.DurationMsg.Deserialize(deserializer);
            deserializer.Read(out this.flags);
            deserializer.Read(out this.squawk);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.icao_address);
            serializer.Write(this.callsign);
            serializer.Write(this.latitude);
            serializer.Write(this.longitude);
            serializer.Write(this.altitude);
            serializer.Write(this.heading);
            serializer.Write(this.hor_velocity);
            serializer.Write(this.ver_velocity);
            serializer.Write(this.altitude_type);
            serializer.Write(this.emitter_type);
            serializer.Write(this.tslc);
            serializer.Write(this.flags);
            serializer.Write(this.squawk);
        }

        public override string ToString()
        {
            return "ADSBVehicleMsg: " +
            "\nheader: " + header.ToString() +
            "\nicao_address: " + icao_address.ToString() +
            "\ncallsign: " + callsign.ToString() +
            "\nlatitude: " + latitude.ToString() +
            "\nlongitude: " + longitude.ToString() +
            "\naltitude: " + altitude.ToString() +
            "\nheading: " + heading.ToString() +
            "\nhor_velocity: " + hor_velocity.ToString() +
            "\nver_velocity: " + ver_velocity.ToString() +
            "\naltitude_type: " + altitude_type.ToString() +
            "\nemitter_type: " + emitter_type.ToString() +
            "\ntslc: " + tslc.ToString() +
            "\nflags: " + flags.ToString() +
            "\nsquawk: " + squawk.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
