//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class StatusEventMsg : Message
    {
        public const string k_RosMessageName = "mavros_msgs/StatusEvent";
        public override string RosMessageName => k_RosMessageName;

        //  EVENT message representation
        //  https://mavlink.io/en/messages/common.html#EVENT
        //  Severity levels
        public const byte EMERGENCY = 0;
        public const byte ALERT = 1;
        public const byte CRITICAL = 2;
        public const byte ERROR = 3;
        public const byte WARNING = 4;
        public const byte NOTICE = 5;
        public const byte INFO = 6;
        public const byte DEBUG = 7;
        //  Fields
        public Std.HeaderMsg header;
        public byte severity;
        public uint px4_id;
        public byte[] arguments;
        public ushort sequence;

        public StatusEventMsg()
        {
            this.header = new Std.HeaderMsg();
            this.severity = 0;
            this.px4_id = 0;
            this.arguments = new byte[40];
            this.sequence = 0;
        }

        public StatusEventMsg(Std.HeaderMsg header, byte severity, uint px4_id, byte[] arguments, ushort sequence)
        {
            this.header = header;
            this.severity = severity;
            this.px4_id = px4_id;
            this.arguments = arguments;
            this.sequence = sequence;
        }

        public static StatusEventMsg Deserialize(MessageDeserializer deserializer) => new StatusEventMsg(deserializer);

        private StatusEventMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.severity);
            deserializer.Read(out this.px4_id);
            deserializer.Read(out this.arguments, sizeof(byte), 40);
            deserializer.Read(out this.sequence);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.severity);
            serializer.Write(this.px4_id);
            serializer.Write(this.arguments);
            serializer.Write(this.sequence);
        }

        public override string ToString()
        {
            return "StatusEventMsg: " +
            "\nheader: " + header.ToString() +
            "\nseverity: " + severity.ToString() +
            "\npx4_id: " + px4_id.ToString() +
            "\narguments: " + System.String.Join(", ", arguments.ToList()) +
            "\nsequence: " + sequence.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
