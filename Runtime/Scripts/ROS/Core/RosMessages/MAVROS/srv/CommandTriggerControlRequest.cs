//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class CommandTriggerControlRequest : Message
    {
        public const string k_RosMessageName = "mavros_msgs/CommandTriggerControl";
        public override string RosMessageName => k_RosMessageName;

        //  Type for controlling onboard camera triggering system
        public bool trigger_enable;
        //  Trigger enable/disable
        public bool sequence_reset;
        //  Reset the trigger sequence
        public bool trigger_pause;
        //  Pause triggering, but without switching the camera off or retracting it.

        public CommandTriggerControlRequest()
        {
            this.trigger_enable = false;
            this.sequence_reset = false;
            this.trigger_pause = false;
        }

        public CommandTriggerControlRequest(bool trigger_enable, bool sequence_reset, bool trigger_pause)
        {
            this.trigger_enable = trigger_enable;
            this.sequence_reset = sequence_reset;
            this.trigger_pause = trigger_pause;
        }

        public static CommandTriggerControlRequest Deserialize(MessageDeserializer deserializer) => new CommandTriggerControlRequest(deserializer);

        private CommandTriggerControlRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.trigger_enable);
            deserializer.Read(out this.sequence_reset);
            deserializer.Read(out this.trigger_pause);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.trigger_enable);
            serializer.Write(this.sequence_reset);
            serializer.Write(this.trigger_pause);
        }

        public override string ToString()
        {
            return "CommandTriggerControlRequest: " +
            "\ntrigger_enable: " + trigger_enable.ToString() +
            "\nsequence_reset: " + sequence_reset.ToString() +
            "\ntrigger_pause: " + trigger_pause.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
