//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class GimbalManagerConfigureRequest : Message
    {
        public const string k_RosMessageName = "mavros_msgs/GimbalManagerConfigure";
        public override string RosMessageName => k_RosMessageName;

        //  MAVLink command: DO_GIMBAL_MANAGER_CONFIGURE
        //  https://mavlink.io/en/messages/common.html#MAV_CMD_DO_GIMBAL_MANAGER_CONFIGURE
        //  Note: default MAV_COMP_ID_ONBOARD_COMPUTER = 191, see MAV_COMPONENT documentation
        //  https://mavlink.io/en/messages/common.html#MAV_COMPONENT
        public short sysid_primary;
        //  Sysid for primary control (0: no one in control, 
        //  -1: leave unchanged, -2: set itself in control 
        //  (for missions where the own sysid is still unknown), 
        //  -3: remove control if currently in control).
        public short compid_primary;
        //  Compid for primary control (0: no one in control, 
        //  -1: leave unchanged, -2: set itself in control 
        //  (for missions where the own sysid is still unknown), 
        //  -3: remove control if currently in control).
        public short sysid_secondary;
        //  Sysid for secondary control (0: no one in control, 
        //  -1: leave unchanged, -2: set itself in control 
        //  (for missions where the own sysid is still unknown), 
        //  -3: remove control if currently in control).
        public short compid_secondary;
        //  Compid for secondary control (0: no one in control, 
        //  -1: leave unchanged, -2: set itself in control 
        //  (for missions where the own sysid is still unknown), 
        //  -3: remove control if currently in control).
        public byte gimbal_device_id;
        //  Component ID of gimbal device to address 
        //  (or 1-6 for non-MAVLink gimbal), 0 for all gimbal device
        //  components. Send command multiple times for more than
        //  one gimbal (but not all gimbals).
        //  Note: Default Mavlink gimbal device ids: 154, 171-175

        public GimbalManagerConfigureRequest()
        {
            this.sysid_primary = 0;
            this.compid_primary = 0;
            this.sysid_secondary = 0;
            this.compid_secondary = 0;
            this.gimbal_device_id = 0;
        }

        public GimbalManagerConfigureRequest(short sysid_primary, short compid_primary, short sysid_secondary, short compid_secondary, byte gimbal_device_id)
        {
            this.sysid_primary = sysid_primary;
            this.compid_primary = compid_primary;
            this.sysid_secondary = sysid_secondary;
            this.compid_secondary = compid_secondary;
            this.gimbal_device_id = gimbal_device_id;
        }

        public static GimbalManagerConfigureRequest Deserialize(MessageDeserializer deserializer) => new GimbalManagerConfigureRequest(deserializer);

        private GimbalManagerConfigureRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.sysid_primary);
            deserializer.Read(out this.compid_primary);
            deserializer.Read(out this.sysid_secondary);
            deserializer.Read(out this.compid_secondary);
            deserializer.Read(out this.gimbal_device_id);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.sysid_primary);
            serializer.Write(this.compid_primary);
            serializer.Write(this.sysid_secondary);
            serializer.Write(this.compid_secondary);
            serializer.Write(this.gimbal_device_id);
        }

        public override string ToString()
        {
            return "GimbalManagerConfigureRequest: " +
            "\nsysid_primary: " + sysid_primary.ToString() +
            "\ncompid_primary: " + compid_primary.ToString() +
            "\nsysid_secondary: " + sysid_secondary.ToString() +
            "\ncompid_secondary: " + compid_secondary.ToString() +
            "\ngimbal_device_id: " + gimbal_device_id.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
