//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class CommandTOLLocalRequest : Message
    {
        public const string k_RosMessageName = "mavros_msgs/CommandTOLLocal";
        public override string RosMessageName => k_RosMessageName;

        // Common type for LOCAL Take Off and Landing
        public float min_pitch;
        //  used by takeoff
        public float offset;
        //  used by land (landing position accuracy)
        public float rate;
        //  speed of takeoff/land in m/s
        public float yaw;
        //  in radians
        public Geometry.Vector3Msg position;
        // (x,y,z) in meters

        public CommandTOLLocalRequest()
        {
            this.min_pitch = 0.0f;
            this.offset = 0.0f;
            this.rate = 0.0f;
            this.yaw = 0.0f;
            this.position = new Geometry.Vector3Msg();
        }

        public CommandTOLLocalRequest(float min_pitch, float offset, float rate, float yaw, Geometry.Vector3Msg position)
        {
            this.min_pitch = min_pitch;
            this.offset = offset;
            this.rate = rate;
            this.yaw = yaw;
            this.position = position;
        }

        public static CommandTOLLocalRequest Deserialize(MessageDeserializer deserializer) => new CommandTOLLocalRequest(deserializer);

        private CommandTOLLocalRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.min_pitch);
            deserializer.Read(out this.offset);
            deserializer.Read(out this.rate);
            deserializer.Read(out this.yaw);
            this.position = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.min_pitch);
            serializer.Write(this.offset);
            serializer.Write(this.rate);
            serializer.Write(this.yaw);
            serializer.Write(this.position);
        }

        public override string ToString()
        {
            return "CommandTOLLocalRequest: " +
            "\nmin_pitch: " + min_pitch.ToString() +
            "\noffset: " + offset.ToString() +
            "\nrate: " + rate.ToString() +
            "\nyaw: " + yaw.ToString() +
            "\nposition: " + position.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
