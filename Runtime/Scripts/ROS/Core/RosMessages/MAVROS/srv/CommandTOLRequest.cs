//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    [Serializable]
    public class CommandTOLRequest : Message
    {
        public const string k_RosMessageName = "mavros_msgs/CommandTOL";
        public override string RosMessageName => k_RosMessageName;

        //  Common type for Take Off and Landing
        public float min_pitch;
        //  used by takeoff
        public float yaw;
        public float latitude;
        public float longitude;
        public float altitude;

        public CommandTOLRequest()
        {
            this.min_pitch = 0.0f;
            this.yaw = 0.0f;
            this.latitude = 0.0f;
            this.longitude = 0.0f;
            this.altitude = 0.0f;
        }

        public CommandTOLRequest(float min_pitch, float yaw, float latitude, float longitude, float altitude)
        {
            this.min_pitch = min_pitch;
            this.yaw = yaw;
            this.latitude = latitude;
            this.longitude = longitude;
            this.altitude = altitude;
        }

        public static CommandTOLRequest Deserialize(MessageDeserializer deserializer) => new CommandTOLRequest(deserializer);

        private CommandTOLRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.min_pitch);
            deserializer.Read(out this.yaw);
            deserializer.Read(out this.latitude);
            deserializer.Read(out this.longitude);
            deserializer.Read(out this.altitude);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.min_pitch);
            serializer.Write(this.yaw);
            serializer.Write(this.latitude);
            serializer.Write(this.longitude);
            serializer.Write(this.altitude);
        }

        public override string ToString()
        {
            return "CommandTOLRequest: " +
            "\nmin_pitch: " + min_pitch.ToString() +
            "\nyaw: " + yaw.ToString() +
            "\nlatitude: " + latitude.ToString() +
            "\nlongitude: " + longitude.ToString() +
            "\naltitude: " + altitude.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
